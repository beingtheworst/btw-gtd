<views:MvxPhonePage
    x:Class="Gtd.Client.WindowsPhone.Views.InboxView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:Cirrious.MvvmCross.WindowsPhone.Views;assembly=Cirrious.MvvmCross.WindowsPhone"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="True">

    <!--LayoutRoot is the root grid where all page content is placed-->
    <Grid x:Name="LayoutRoot" Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--TitlePanel contains the name of the application and page title-->
        <StackPanel Grid.Row="0" Margin="12,17,0,28">
            <TextBlock Text="GTD - beingtheworst.com" Style="{StaticResource PhoneTextNormalStyle}" HorizontalAlignment="Right"/>
            <TextBlock Text="inbox" Margin="9,-7,0,0" Style="{StaticResource PhoneTextTitle1Style}"/>
        </StackPanel>

        <!--ContentPanel - place additional content here-->
        <Grid x:Name="ContentPanel" Grid.Row="1" Margin="12,0,12,0">
            <ListBox
                ItemsSource="{Binding StuffInInbox}"
                SelectionChanged="Selector_OnSelectionChanged"
                >
                <!-- TODO: Blend Behaviors with Mvx EventToCommand Trigger -->
                <!-- TODO: tried to use interactivity: from System.Windows.Interactivity N=15 ~ 11:30-->
                <!-- but it wasn't working used hacky code-behind for now -->
                <!-- So use Code-Behind Hack for now and bind to SelectionChanged event above -->
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" FontSize="36" Text="{Binding StuffDescription}" TextWrapping="Wrap"></TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
    <!-- TODO: Bindable Application Bar using libraries out there? Cheat with Code-Behind for now-->
    <!-- TODO: In prod app may want a confirmation dialog presented prior to delete -->
    <views:MvxPhonePage.ApplicationBar>
        <shell:ApplicationBar>
            <shell:ApplicationBar.Buttons>
                <shell:ApplicationBarIconButton IconUri="/Icons/appbar.add.light.png" Text="add stuff" Click="ApplicationBarIconButton_OnClick"></shell:ApplicationBarIconButton>
            </shell:ApplicationBar.Buttons>
        </shell:ApplicationBar>
    </views:MvxPhonePage.ApplicationBar>

</views:MvxPhonePage>